---
title: Development Version
in_menu: true
sort_info: 35
---

Development Version
===================

**Latest Completed Development Version:**  [jldrill-0.3.4](http://sakabatou.dnsdojo.org/devel/jldrill/jldrill-0.3.4)

For details on development versions, see below.

If you've been following development of JLDrill for a while, you can
see that stable releases are few an far between.  I'm hoping to change
that in the near future, but sometimes I'm lazy about updating this
site.  However, I actually do make updates to the code fairly
frequently (usually every week).

Usually the development version is quite stable (it's the one I
use every day).  So if you want something more cutting edge, or
you would like to get involved in doing development on JLDrill you
can always get the latest code from the
[JLDrill BZR Repository](http://sakabatou.dnsdojo.org/devel/jldrill/).

[Development documentation](http://sakabatou.dnsdojo.org/devel/jldril/doc/index.html) for this version including a TODO list is available.

Note that JLDrill is built upon Context, which is a library for
abstracting user interfaces using MVP (Model View Presentor).  So
you will need the Context code as well.  It is available from the
[Context BZR Repository](http://sakabatou.dnsdojo.org/devel/context/).

BZR is a distributed version control system.  You can get more
information on BZR and download it from the 
[Bazaar Home Page](http://bazaar-vcs.org/).

After you get the development trees you will need to install the
following gems:

* rake
* rspec
* rcov
* webgen

The current version of webgen doesn't play well with the version
of rubygems in Debian and Ubuntu, unfortunately.  So you will have
to install version 0.5.3 of webgen (gem install -v 0.5.3 webgen).
Also webgen has a lot of optional dependencies that are necessary.
Keep running webgen and installing the dependencies until it stops
complaining.

Once you have everthing installed you will be able to build everything
using:

<pre>
		rake update
</pre>

Once you have done that, you should view the development documentation
and TODO list for that version by looking at doc/index.html.  It will 
also contain links to the user documentation for the specific version 
you build.

I am actively encouraging people to help in the development of
JLDrill.  If you want to contribute, please send me patches,
suggestions, etc.  There are a few areas I need specific help.

* User interface design.  All suggestions are welcome.  Anyone who
wants to work in this area can do as much as they want :-)
* Windows/OS X packaging.  Honestly, I don't want to do this at all.
Windows is hard for me to use and I don't even have a Mac.  So I would
be happy to hand this over to anyone who is keen.
* Web page development/documentation.  I don't mind doing this, but
frankly I'm not that great at it.  And there is really more work than
I can do myself.
* Content development.  The content that exists now is the content
that I am studying.  It would be better to have more (or better)
content.
* Itch scratching.  If you like to code, I welcome any and all patches
of functionality.  But I have to insist on tests (even though I have
occasionally been lax in that area).  I'm happy to work with you on
tests if you have difficulty writing them, though.

Development Versions
--------------------
Development versions of JLDrill have a version number like 0.3.x where
x is not 0.  In Release versions, the number is 0.  To understand
development versions you have to understand my process a little bit.

I will give an example.  Let's say I released version 0.3.0.  That
is the "Release version" and you know it is because the last number
is a 0.  This is a stable release that I expect end users to be able
to use.  After I release this version, I will start to work on
0.3.1.  This is a "Development version".  You know it's development
because the last number isn't 0.

But while I'm working on it it isn't completed yet.  It might not even
work properly.  This is known as the "Current Development Version".
You can look at this web page to see what it is (see below).  There
is no reason to use a current development version unless you are
modifying it. 

When I am finished doing what I want to do for that development
version, it will be complete.  I will update this page to show
what the "Latest Completed Development Version" is.  I will
also try to show what I've done to the version.

The Latest Completed Development Version is a bleeding edge
version of JLDrill.  I expect it to work.  Some features might
be incomplete and there might be bugs.  But it should work.
You can use it if you really need the new features, or if
you want to join in on testing.

Development Version History
---------------------------
Current Development Version: **None**.

Latest Completed Development Version: [jldrill-0.3.4](http://sakabatou.dnsdojo.org/devel/jldrill/jldrill-0.3.4)

Changes in [jldrill-0.3.4](http://sakabatou.dnsdojo.org/devel/jldrill/jldrill-0.3.4)

* Add description for ã€… in the kanji popup
* Pressing Cancel when quitting used to leave you hung with no window.  Fixed.
* Fixed a crash, but didn't record the reason for the crash when I fixed it.
* If you have a kanji question and edit it to take out the kanji, the
  question in the main view used to be blank.  Now it creates a new
  meaning problem.
* You can now load the dictionary from all windows except the Show All
  Vocabulary window.
* Improved the workflow for the add and edit windows (see documentation for
  details)
* If the user has seen the answer for a question, display it after the
  vocabulary has been updated.
* I now renumber the item positions when resetting the drill. This
  is to offset a very old bug that led to some invalid files.
* Editing items was sometimes slow due to searching more times than
  necessary.
* Considerable amount of code refactoring
* Make the all vocab list a non-modal dialog and it follow what's
  going on.
* Add a word search in tables by pressing Ctrl-F
* Considerable speedup for appending files
* Allow editing, deleting and previewing items from the all vocabulary list
* Allow previewing from edit and add windows
* Allow deleting items from the main window
* Allow the user to change the order of items in the quiz in the all
  vocabulary list
* Allow the user to create a new drill.

Changes in [jldrill-0.3.3](http://sakabatou.dnsdojo.org/devel/jldrill/jldrill-0.3.3)

* Improved development documentation.  Opening the index.html file in the doc 
  directory gets you started.
* Some refactoring with Strategy and Item Status.
* Reset now drills the first item in the quiz.  This means that when you reset
  the drill, there will always be one item in the level 1 working set.  But
  this is better than keeping the last problem around, or not having a problem
  when you reset the drill (both of which are confusing).
* Only start the countdown for New Item mode after you have seen 10 items.
  I did this because I found that when I'm on top of things my review for
  the first 10 items is always 100%.  Possibly this means that I need to
  backoff the difficulty for items that have already been memorized.  More
  research needs to be done.
* Properly reset the scheduled time in items when the quiz is reset.  Also
  reset each item when it is first introduced in case we have old quizzes
  that contain the scheduled time.
* Modify the stats window to show the accuracy of items by original
  duration rather than number of consequtive correct answers.  This
  gives a better indication of whether or not the backoff is working
  properly (for difficult items I level 5 item may have only been around
  2 or 3 days).

Changes in [jldrill-0.3.2](http://sakabatou.dnsdojo.org/devel/jldrill/jldrill-0.3.2)

* Dramatically speed up reference dictionary loading time.
* Reduce memory usage to some degree.
* Automatically load kanji information on startup.
* Fix bug where app could hang searching for an empty vocabulary.
* Clear the search box after an item has been added.
* Do a reference check for the current problem once the dictionary has been loaded.
* Automatically do a search in the add and edit windows once the dictionary has been loaded.

Changes in [jldrill-0.3.1](http://sakabatou.dnsdojo.org/devel/jldrill/jldrill-0.3.1)

* Add Rakefile tasks to build releases
  * publish -- Publish the web page to Rubyforge
  * release -- Create a release directory for the current version
  * update -- Run rcov, web, and release
* Allow reading of Edict files in either EUC or UTF8 encoding
* Update the EDICT dictionary to the latest version