= JLDrill - Japanese Language Drill program

JLDrill is a program for helping people drill aspects of the
Japanese language using spaced repetition. 

== Features
* spaced repetition   
* a dictionary cross reference tool 
* pop-up kanji reference (inspired by rikaichan for Firefox)
* ability to import EDICT format files (EUC or UTF8 encoded) as a drill

Current drills include:
* a kana drill
* JLPT vocabulary drills
* a partial grammar drill derived from 
  {Tae Kim's Japanese Guide to Japanese Grammar}[http://www.guidetojapanese.org]


== User Documentation
Complete user documentation including installation instructions
for GNU/Linux and Windows is available. The currently released 
stable version will always be available at:

http://jldrill.rubyforge.org

The version of this package is jldrill-0.4.1.  It is a
development release version that is intended to by used by
those wanting to try out new features.  While development
releases are intended to be complete and bug free, some
features are still being explored in terms of their usefulness
and useability.  If you require a stable release, please
use the general realeas 0.4.0.  JLDrill is considered to be beta quality, but
it is hoped to be useful for end users. Bug reports and
suggestions are welcome.
The location for the documentation for this release is depends on
where you are viewing this.

{Installed Gem}[link://../../../gems/jldrill-0.4.1/web/output/index.html]
|
{Source Repository}[link://../web/output/index.html]


== License

JLDrill is copyright (C) 2005-2008 Mike Charlton.  It is licensed
under version 3.0 of the GNU General Public License (GPL) Please see
the COPYING File for more details.  Previous versions of JLDrill were
released under version 2.0 of the GPL and you may choose that version
if you wish.  However version 3.0 represents a major improvement in
clearing up ambiguous details, so I highly recommend choosing GPL 3.0
if you wish to extend this software.

License information for the various support files (dictionary, drills,
etc.) are located in the data/jldrill/COPYING directory.

== Development Documentation

Documentation on how to build and contribute to JLDrill is available:

{Installed Gem}[link://../../../gems/jldrill-0.4.1/web/output/Development.html]
|
{Source Repository}[link://../web/output/Development.html]

If you have installed from a development tree and have built the tests, then
the results and test code coverage will be available here:

Installed gem:
{Test results}[link://../../../gems/jldrill-0.4.1/test_results.html]
|
{Code coverage}[link://../../../gems/jldrill-0.4.1/coverage/index.html]

Source repository:
{Test results}[link://../test_results.html]
|
{Code coverage}[link://../coverage/index.html]
  
== TODO

The TODO file is maintained in an Emacs Org mode file.  Org mode
is a mode of emacs that allows you to easily organize data.
The original file is text based and is easily readable and
editable with any editor.  But to publish the html file you need
Emacs.  The current published HTML file is here.

{Installed Gem}[link://../../../gems/jldrill-0.4.1/TODO.html]
|
{Source Repository}[link://../TODO.html]

== Getting Involved

While I have built JLDrill on the work of others, as an entity on its
own, I have been the sole contributor.  There are many reasons for this,
but regardless I am very enthusiastic about receiving any kind of
contribution from other people.  Even if you can't write software, there
are many ways you can contribute.  I want to encourage this as much as
possible.
  
Please address any comments, suggestions, corrections and patches to:
mailto://mikekchar@gmail.com

I'm also very interested in receiving any new drills you may come up with.
Please make sure to specify the license information for any material you
send to me.
  
